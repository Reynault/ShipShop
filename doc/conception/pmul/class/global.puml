@startuml

title Global diagram

class Observable{

}

package model{

    class ShipShop{
        + createGame(era: Era, tactic: Tactic)
        + getCurrentPlayer(): int
        + placeShip(x: int, y: int, ship: ShipType)
        + attack(assailant: int, x: int, y: int, numGrille: int)
        + endTurn()
        + saveCurrentGame()
        + loadGame()
    }

    ShipShop --> "1" GameFactory: gameFactory
    GameFactory ..> Game: create

    class GameFactory{
        + getPVEGame(): Game
        + getPVPGame(): Game
        + getEVEGame(): Game
    }

    class SaveManager{

    }

    package game{

        abstract Game{
            - currentPlayer: int
            - association: Army[]
            + Game(era: Era)
            + attack(assailant: int, x: int, y: int, numGrille: int)
            + place(x: int, y: int, ship: ShipType)
        }

        class GameWithIA{
            + Game(era: Era, tactic: Tactic)
        }

        class ArmyFactory{
            + getIAArmy()
            + getHumanArmy()
        }

        class Army{
            + getDmg(ship: int): int
            + getHit(x: int, y: int, dmg: int)
            + place(x: int, y: int, ship: int)
        }

        package grid{

            abstract Grid{
                + hitShip(x: int, y: int, dmg: int)
                + moveShip(x: int, y: int,
            }

            class SimpleGrid{

            }

            abstract Tile{
                - hasBeenHit: boolean
            }

            class SimpleTile{

            }

        }

        package ship{

            class Ship{

            }

            abstract FleetFactory{

            }

            class ModernFleet{

            }

            class XVIFleet{

            }

        }


        package era{

            class Era{
                - {final} name: String
                - Era(name: String)
                + getName(): String
            }

            class EraFactory{
                + getModernEra()
                + getXVIEra()
            }

        }

        package player{

            abstract Player{

            }

            class IA{

            }

            package Tactic{

                interface Tactic{

                }

                class RandomTactic{

                }

                class CrossTactic{

                }

            }

            class Human{

            }

        }

    }

}

ShipShop --> "1" Game: - game
ShipShop --> "1" SaveManager: -saveManager
ShipShop -up-|> Observable

Game --> "*" Army: - armies

Grid --> "*" Ship: - ships
Grid --> "*" Tile

FleetFactory ..> Ship: "create"

SimpleGrid --|> Grid
SimpleTile --|> Tile

ArmyFactory ..>  Army: "create"

Army --> "1" Player: - player
Army --> "1" FleetFactory: - fleet
Army --> "1" Grid: -grid

GameWithIA -up-|> Game

EraFactory --> "1" Era: -modern
EraFactory --> "1" Era: -XVI

ModernFleet --|> FleetFactory
XVIFleet --|> FleetFactory

Human --|> Player
IA --|> Player

IA --> "1" Tactic: - tactic

RandomTactic ..|> Tactic
CrossTactic ..|> Tactic


@enduml