@startuml

package ship{

    class Ship{
        - hp: int
        - ammo: int
        - dmg: int
        - nbTiles: int
        - direction: Direction
        - shiptype: ShipType
        + Ship(x: int, y: int, direction: Direction, shiptype: ShipType)
        + place(x: int, y:int, direction: Direction)
        + canAttack(ship: UUID): boolean
        + takeDamage(value: int)
        + getDmg(): int
        + hasSunk(): boolean
        + canShoot(): boolean
    }


    abstract FleetFactory{
        - nbCruiser: int
        - nbSubmarine: int
        - nbTorpedo: int
        - nbAircraft: int
        + FleetFactory(nbc: int, nbs: int, nbt: int, nba: int)

        + {static} getFleetFactory(era: Era, nbc: int, nbs: int, nbt: int, nba: int): FleetFactory

        + hasCruiser(): boolean
        + hasSubmarine(): boolean
        + hasTorpedo(): boolean
        + hasAircraft(): boolean

        + {abstract} getCruiser(x: int, y: int, direction: GlobalDirection, ): Ship
        + {abstract} getSubmarine(): Ship
        + {abstract} getTorpedoBoat(): Ship
        + {abstract} getAircraftCarrier(): Ship
    }

    class ModernFleet{
        + getCruiser(): Ship
        + getSubmarine(): Ship
        + getTorpedoBoat(): Ship
        + getAircraftCarrier(): Ship
    }

    class XVIFleet{
        + getCruiser(): Ship
        + getSubmarine(): Ship
        + getTorpedoBoat(): Ship
        + getAircraftCarrier(): Ship
    }

    ModernFleet --|> FleetFactory
    XVIFleet --|> FleetFactory

}

@enduml