@startuml

title When a player move a cruiser on his grid (for the first time)

autonumber
actor player

player -> GUI: The player wants to move a ship

GUI -> ShipShop: placeShip(move)

note left
move is an object with all
the information needed to place a ship
(x, y, direction, UUID, type)

In this case UUID is equal to NONE_UUID,
because the ship doesn't exist yet.
end note

ShipShop -> Game: placeShip(move)

Game -> "current: Player": placeShip(move)

"current: Player" -> "current: Grid": placeShip(move)

"current: Grid" -> FleetFactory: hasCruiser()

FleetFactory --> "current: Grid": cruiser

opt cruiser == false

    "current: Grid" -> FleetFactory: getCruiser(x, y, direction, shiptype)

    create Ship
    FleetFactory -> Ship: create

    FleetFactory --> "current: Grid": Ship


end

"current: Grid" --> "current: Player": UUID

"current: Player" --> Game: UUID

Game --> ShipShop: UUID

ShipShop -> ShipShop: setChanged()

ShipShop -> ShipShop: notifyObserver( PLACE )

ShipShop --> GUI: The GUI is updated by the observable

GUI --> player: update the gui on the grid

@enduml